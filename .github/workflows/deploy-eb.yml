name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'
      
      - name: Build with Maven
        run: ./mvnw clean package -DskipTests
      
      - name: Get version from pom.xml
        id: get_version
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_OUTPUT
      
      - name: Generate version label
        id: version_label
        run: echo "LABEL=v${{ steps.get_version.outputs.VERSION }}-$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-1  # Update to your AWS region
      
      - name: Upload to S3
        run: |
          aws s3 cp target/thunderfat-spring-boot-backend-${{ steps.get_version.outputs.VERSION }}.jar \
            s3://thunderfat-deployments/
      
      - name: Deploy to Elastic Beanstalk
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name "ThunderFat-API" \
            --version-label "${{ steps.version_label.outputs.LABEL }}" \
            --source-bundle S3Bucket="thunderfat-deployments",S3Key="thunderfat-spring-boot-backend-${{ steps.get_version.outputs.VERSION }}.jar" \
            --description "Automated deployment from GitHub Actions"
          
          aws elasticbeanstalk update-environment \
            --application-name "ThunderFat-API" \
            --environment-name "ThunderFatApiProd" \
            --version-label "${{ steps.version_label.outputs.LABEL }}"
      
      - name: Publish SDK to npm
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          cd sdk
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
